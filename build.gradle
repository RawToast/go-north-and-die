buildscript {
    ext.kotlin_version = '1.2.31'
    ext.arrow_version = '0.7.1'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.adarshr:gradle-test-logger-plugin:1.1.2'
    }
}

plugins {
    id "com.heroku.sdk.heroku-gradle" version "0.2.0"
    id "org.jetbrains.kotlin.jvm" version "1.2.21"
}


// Plugins
apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'com.adarshr.test-logger'
apply plugin: 'kotlin-kapt'


mainClassName = 'gonorth.InputKt'

// Repositories
repositories {
    mavenCentral()

    jcenter()
    maven { url "https://dl.bintray.com/kantenkugel/maven" }
}

// Dependencies
dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile "io.arrow-kt:arrow-core:$arrow_version"
    compile "io.arrow-kt:arrow-typeclasses:$arrow_version"
    compile "io.arrow-kt:arrow-syntax:$arrow_version"
//    kapt    "io.arrow-kt:arrow-annotations-processor:$arrow_version"

    compile "io.arrow-kt:arrow-free:$arrow_version"
    compile "io.arrow-kt:arrow-effects:$arrow_version"
    compile "io.arrow-kt:arrow-optics:$arrow_version"
    compile "org.jline:jline:3.6.2"
//    compile "org.jline:console:3.6.2"
//    compile "org.jline:console:3.6.2"

    testCompile 'junit:junit:4.11'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

// Language Settings
kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task stage() {
    dependsOn build
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3'
}

test {
    testLogging {
        outputs.upToDateWhen { false }
    }
}
jar {
    manifest {
        attributes 'Main-Class': 'gonorth.InputKt'
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}
